<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.blogcommunity.mapper.QuestionExtMapper">
    <resultMap id="BaseResultMap" type="com.example.blog.blogcommunity.model.Question">

        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
        <result column="GMT_CREATE" jdbcType="BIGINT" property="gmtCreate"/>
        <result column="GMT_MODIFIED" jdbcType="BIGINT" property="gmtModified"/>
        <result column="CREATOR" jdbcType="INTEGER" property="creator"/>
        <result column="COMMENT_COUNT" jdbcType="INTEGER" property="commentCount"/>
        <result column="VIEW_COUNT" jdbcType="INTEGER" property="viewCount"/>
        <result column="LIKE_COUNT" jdbcType="INTEGER" property="likeCount"/>
        <result column="TAG" jdbcType="VARCHAR" property="tag"/>
    </resultMap>

    <update id="incView" parameterType="com.example.blog.blogcommunity.model.Question">
    update QUESTION
    set
    VIEW_COUNT = VIEW_COUNT + #{viewCount,jdbcType = INTEGER}
    where id = #{id}
  </update>

    <update id="incCommentCount" parameterType="com.example.blog.blogcommunity.model.Question">
    update QUESTION
    set
    COMMENT_COUNT = COMMENT_COUNT+ #{commentCount,jdbcType = INTEGER}
    where id = #{id}
  </update>

    <select id="selectRelated" parameterType="com.example.blog.blogcommunity.model.Question" resultMap="BaseResultMap">
        select * from QUESTION where id != #{id} and tag regexp #{tag}
    </select>


    <select id="countBySearch" parameterType="com.example.blog.blogcommunity.dto.QuestionQueryDTO"
            resultType="java.lang.Integer">
        select count(*) from QUESTION
        <where>
            <if test="search != null and search !=''">
                and title regexp #{search}
            </if>
        </where>
    </select>

    <select id="selectBySearch" parameterType="com.example.blog.blogcommunity.dto.QuestionQueryDTO"
            resultMap="BaseResultMap">
        select * from QUESTION
        <where>
            <if test="search != null and search !=''">
                and title regexp #{search}
            </if>
        </where>
        order by gmt_create desc limit #{page},#{size}
    </select>

    <insert id="insertAfterSearch" parameterType="com.example.blog.blogcommunity.model.Question">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select id from question where gmt_create = #{gmtCreate,jdbcType=BIGINT}
        </selectKey>

        insert into QUESTION (ID, TITLE, GMT_CREATE,
      GMT_MODIFIED, CREATOR, COMMENT_COUNT,
      VIEW_COUNT, LIKE_COUNT, TAG,
      DESCRIPTION)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=BIGINT},
      #{gmtModified,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{commentCount,jdbcType=INTEGER},
      #{viewCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR},
      #{description,jdbcType=CLOB})
    </insert>
</mapper>